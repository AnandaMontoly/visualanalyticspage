{"version":3,"sources":["ControlledAccordians.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","heading","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","ControlledAccordions","classes","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","className","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","href","App","Helmet","Grid","container","spacing","direction","justify","alignItems","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.d2ea27cf.chunk.js","sourcesContent":["import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { Component } from 'react';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ControlledAccordions() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n        <b>R</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          <a href=\"https://www.statmethods.net/r-tutorial/index.html\">R</a> is a programming language oriented around doing statistical analysis and designing data visualizations. R excels for tasks like\r\n          creating regression models, machine learning, and quickly exploring data using libraries like <a href=\"https://www.datacamp.com/community/tutorials/tidyverse-tutorial-r\">Tidyverse.</a>\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n        <b>Python</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          <a href=\"https://www.w3schools.com/python/\">Python</a> is a programming language used for a variety of tasks. For example, Python can be used to create data visualizations\r\n          using libraries like Dash, Matplotlib, and Seaborn combined with Pandas and Numpy. Python can also be used for many machine learning\r\n          tasks, with libraries like Scikit-learn and Tensorflow. Python can also be used to create a RESTful API with libraries like <a href=\"https://flask.palletsprojects.com/en/1.1.x/tutorial/\">Flask.</a>\r\n          Restful APIS are useful for sending data between the client and the server using JSON files.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n        <b>HTML/CSS</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          <a href=\"https://www.w3schools.com/html/default.asp\">HTML/CSS</a> (HyperText Markup Language and Cascading Style Sheets) are the languages used to define and format data on the web. HTML describes how\r\n          information is laid out on the web and CSS describes what it looks like.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n        <b>JavaScript/React/Node</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          <a href=\"https://www.w3schools.com/js/js_intro.asp\">JavaScript</a> is the native programming language of the web. It can modify the HTML and CSS of a webpage as well and is able to do anything that\r\n          another programming language can do. Javascript is the language used for developing data visualizations on the web as well, using libraries like Plotly, D3.js, and VisJS. <a href=\"https://www.w3schools.com/react/default.asp\">React</a> is a JavaScript\r\n          framework used to make web design modular using ideas like components and the state.\r\n          This website is written in React! There are other web frameworks as well. <a href=\"https://www.w3schools.com/nodejs/default.asp\">Node.js</a> is another server similar to Flask written in JavaScript.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel5'} onChange={handleChange('panel5')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n        <b>Databases</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          Databases are ways to store large amounts of information. Relational databases use large tables of information with a structured format which can be joined together.\r\n          You \"ask\" a relational database a question using <a href=\"https://www.w3schools.com/sql/\">SQL</a> (Structured Query Language), so relational databases are frequently called SQL databases.\r\n          Databases which store information differently from relational databases are called NoSQL databases and there's a lot of variety in them. Other varieties of\r\n          databases include key-value databases like <a href=\"https://cassandra.apache.org/\">Cassandra</a>, graph databases like <a href=\"https://neo4j.com/\">neo4j</a>, document databases like <a href=\"https://www.mongodb.com/\">MongoDB</a>, and many others.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel6'} onChange={handleChange('panel6')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n        <b>The Cloud</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          When running a website with a server, people need to run that server at all times so that the client can always reach it. Instead of running it on their computers,\r\n          most of them pay another company to run it on their computers instead. They can also run databases, machine learning models, etc. This is the cloud.\r\n          Companies like <a href=\"https://aws.amazon.com/\">Amazon</a>, <a href=\"https://azure.microsoft.com/en-us/\">Microsoft</a>, <a href=\"https://cloud.google.com/\">Google</a>, and <a href=\"https://www.ibm.com/cloud\">IBM</a> all provide these services. The\r\n          most beginner friendly is probably Amazon Web Services or <a href=\"https://www.heroku.com/\">Heroku</a>.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport ControlledAccordions from './ControlledAccordians';\nimport Grid from '@material-ui/core/Grid';\nimport { Helmet } from 'react-helmet'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Helmet>\n      <title>{ \"Visual Analytics\" }</title>\n    </Helmet>\n\n    <Grid container spacing={1}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        item xs = {1}\n      >\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        item xs = {10}\n      >\n        <h1>About Me</h1>\n        <p>\n        Hi! My name is Ananda (ah-NAWN-dah or AH-nun-duh) and I'm a junior year Computer Sciences\n        and Data Science double major at Smith. I'm also a TA for visual analytics.\n        <br /><br />\n        <h1>My Skill Set</h1>\n        Outside of classes, I have a good amount of experience with full stack web development and designing\n        data visualization tools. I regularly work in R, Python, HTML/CSS, JavaScript/React/Node, and with\n        SQL and NoSQL databases. I also have experience deploying fullstack apps to the cloud (usually Google cloud).\n        If you'd like help with any of those topics, feel free to come to office hours and I can help out. Even if it isn't related\n        to one of those topics, I might still know it or can take my best crack at it.\n        <br /><br />\n        <b>What are those topics?</b>\n        <br /><br />\n        <ControlledAccordions />\n        <br />\n        <h1>My Hours</h1>\n        I'm available on Mondays and Fridays from 3-5 PM ET. If you need to ask me a non-programming question off hours,\n        you can reach me at <a href=\"mailto:amontoly@smith.edu\">amontoly@smith.edu</a> or more quickly at freshfriedsalad#4792 on Discord. {/* If you have questions about class material outside of hours, I'm usually\n        on the Discord server and can answer questions in the questions channel if I have time. */}\n        <br /><br />\n        <h1>My Previous Work</h1>\n        I designed <a href=\"https://bottlemessage-299107.uc.r.appspot.com/\">this data visualization</a> for Jordan's research lab using NetworkX for my analysis,\n        VisJs to create the network visualization on each page, Plotly.js for the other visualizations, and a Flask RESTful API on the backend all deployed to Google Cloud.\n        You can also see some of hackathon projects I've worked on on my <a href=\"https://www.youtube.com/channel/UCiZGlwN8JGogSA1JXaodL_Q\">YouTube channel</a>. For any of you that love knitting, <a href=\"https://knitwits.ue.r.appspot.com/\">this website</a> is a pattern sharing tool we designed using many of the same principles that you'd use for an interactive data visualization website.\n        It was built using React, a Flask API, and Firebase.\n\n        </p>\n      </Grid>\n    </Grid>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n      <Route path='/' render={App} />\n    </Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}